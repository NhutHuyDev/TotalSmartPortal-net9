// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TotalModel.Models;

public partial class TotalSmartPortalEntities : DbContext
{
    public TotalSmartPortalEntities(DbContextOptions<TotalSmartPortalEntities> options)
        : base(options)
    {
    }

    public virtual DbSet<Commodity> Commodities { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<OrganizationalUnit> OrganizationalUnits { get; set; }

    public virtual DbSet<OrganizationalUnitUser> OrganizationalUnitUsers { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<Warehouse> Warehouses { get; set; }

    public virtual DbSet<WarehouseCategory> WarehouseCategories { get; set; }

    public virtual DbSet<WarehouseClass> WarehouseClasses { get; set; }

    public virtual DbSet<WarehouseGroup> WarehouseGroups { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Commodity>(entity =>
        {
            entity.HasIndex(e => e.CodePartA, "IX_CodePartA");

            entity.HasIndex(e => e.CodePartB, "IX_CodePartB");

            entity.HasIndex(e => e.CodePartC, "IX_CodePartC");

            entity.HasIndex(e => e.Code, "IX_Commodities_Code").IsUnique();

            entity.Property(e => e.CommodityId).HasColumnName("CommodityID");
            entity.Property(e => e.BaseUrl).HasMaxLength(100);
            entity.Property(e => e.Caption).HasMaxLength(100);
            entity.Property(e => e.CartonCode).HasMaxLength(60);
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.CodePartA).HasMaxLength(20);
            entity.Property(e => e.CodePartB).HasMaxLength(20);
            entity.Property(e => e.CodePartC).HasMaxLength(20);
            entity.Property(e => e.CodePartD).HasMaxLength(20);
            entity.Property(e => e.CodePartE).HasMaxLength(20);
            entity.Property(e => e.CodePartF).HasMaxLength(20);
            entity.Property(e => e.CommodityBrandId).HasColumnName("CommodityBrandID");
            entity.Property(e => e.CommodityCategoryId).HasColumnName("CommodityCategoryID");
            entity.Property(e => e.CommodityClassId).HasColumnName("CommodityClassID");
            entity.Property(e => e.CommodityCoreId).HasColumnName("CommodityCoreID");
            entity.Property(e => e.CommodityIconId).HasColumnName("CommodityIconID");
            entity.Property(e => e.CommodityLineId).HasColumnName("CommodityLineID");
            entity.Property(e => e.CommoditySizeId).HasColumnName("CommoditySizeID");
            entity.Property(e => e.CommoditySkinId).HasColumnName("CommoditySkinID");
            entity.Property(e => e.CommodityTypeId).HasColumnName("CommodityTypeID");
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.EditedDate).HasColumnType("datetime");
            entity.Property(e => e.GrossPrice).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.Hscode)
                .HasMaxLength(20)
                .HasColumnName("HSCode");
            entity.Property(e => e.ListedPrice).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.LocationId).HasColumnName("LocationID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.NmvntaskId).HasColumnName("NMVNTaskID");
            entity.Property(e => e.OfficialCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OfficialName)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.OrganizationalUnitId).HasColumnName("OrganizationalUnitID");
            entity.Property(e => e.Origin).HasMaxLength(60);
            entity.Property(e => e.OriginalName)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.PackPerPallet).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PackageVolume).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.Packing).HasMaxLength(60);
            entity.Property(e => e.PiecePerPack).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PreparedPersonId).HasColumnName("PreparedPersonID");
            entity.Property(e => e.PreviousCommodityId).HasColumnName("PreviousCommodityID");
            entity.Property(e => e.PurchaseUnit).HasMaxLength(10);
            entity.Property(e => e.QuantityAlert).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.RecycleCommodityId).HasColumnName("RecycleCommodityID");
            entity.Property(e => e.Remarks).HasMaxLength(100);
            entity.Property(e => e.SalesUnit).HasMaxLength(10);
            entity.Property(e => e.Specification).HasMaxLength(100);
            entity.Property(e => e.SupplierId).HasColumnName("SupplierID");
            entity.Property(e => e.TareWeight).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.Volume).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.WeightBase).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.WeightPercent).HasColumnType("decimal(18, 3)");

            entity.HasOne(d => d.RecycleCommodity).WithMany(p => p.InverseRecycleCommodity)
                .HasForeignKey(d => d.RecycleCommodityId)
                .HasConstraintName("FK_Commodities_Commodities");

            entity.HasOne(d => d.User).WithMany(p => p.Commodities)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Commodities_Users");
        });

        modelBuilder.Entity<Location>(entity =>
        {
            entity.Property(e => e.LocationId).HasColumnName("LocationID");
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.AspUserId)
                .IsRequired()
                .HasMaxLength(128)
                .HasColumnName("AspUserID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.EditedDate).HasColumnType("datetime");
            entity.Property(e => e.Facsimile)
                .IsRequired()
                .HasMaxLength(60);
            entity.Property(e => e.LockedDate).HasColumnType("datetime");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OfficialName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Remarks).HasMaxLength(100);
            entity.Property(e => e.Telephone)
                .IsRequired()
                .HasMaxLength(60);
        });

        modelBuilder.Entity<OrganizationalUnit>(entity =>
        {
            entity.Property(e => e.OrganizationalUnitId).HasColumnName("OrganizationalUnitID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.LocationId).HasColumnName("LocationID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OfficalCode)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Location).WithMany(p => p.OrganizationalUnits)
                .HasForeignKey(d => d.LocationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrganizationalUnits_Locations");
        });

        modelBuilder.Entity<OrganizationalUnitUser>(entity =>
        {
            entity.HasKey(e => e.OrganizationalUnitUserId).HasName("PK_OrganizationalUnitIUsers");

            entity.Property(e => e.OrganizationalUnitUserId).HasColumnName("OrganizationalUnitUserID");
            entity.Property(e => e.InActiveDate).HasColumnType("datetime");
            entity.Property(e => e.OrganizationalUnitId).HasColumnName("OrganizationalUnitID");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.OrganizationalUnit).WithMany(p => p.OrganizationalUnitUsers)
                .HasForeignKey(d => d.OrganizationalUnitId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrganizationalUnitIUsers_OrganizationalUnits");

            entity.HasOne(d => d.User).WithMany(p => p.OrganizationalUnitUsers)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrganizationalUnitUsers_Users");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.Property(e => e.UserId)
                .ValueGeneratedNever()
                .HasColumnName("UserID");
            entity.Property(e => e.Email).HasMaxLength(256);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(60);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(60);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<Warehouse>(entity =>
        {
            entity.Property(e => e.WarehouseId).HasColumnName("WarehouseID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.CommodityTypeId).HasColumnName("CommodityTypeID");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.LocationId).HasColumnName("LocationID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(60);
            entity.Property(e => e.Remarks).HasMaxLength(100);
            entity.Property(e => e.WarehouseCategoryId).HasColumnName("WarehouseCategoryID");
            entity.Property(e => e.WarehouseClassId).HasColumnName("WarehouseClassID");
            entity.Property(e => e.WarehouseGroupId).HasColumnName("WarehouseGroupID");

            entity.HasOne(d => d.WarehouseClass).WithMany(p => p.Warehouses)
                .HasForeignKey(d => d.WarehouseClassId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Warehouses_WarehouseClasses");

            entity.HasOne(d => d.WarehouseGroup).WithMany(p => p.Warehouses)
                .HasForeignKey(d => d.WarehouseGroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Warehouses_WarehouseGroups");
        });

        modelBuilder.Entity<WarehouseCategory>(entity =>
        {
            entity.Property(e => e.WarehouseCategoryId).HasColumnName("WarehouseCategoryID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Remarks).HasMaxLength(100);
        });

        modelBuilder.Entity<WarehouseClass>(entity =>
        {
            entity.HasKey(e => e.WarehouseClassId).HasName("PK_WarehouseClasss");

            entity.Property(e => e.WarehouseClassId).HasColumnName("WarehouseClassID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Remarks).HasMaxLength(100);
        });

        modelBuilder.Entity<WarehouseGroup>(entity =>
        {
            entity.Property(e => e.WarehouseGroupId).HasColumnName("WarehouseGroupID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Remarks).HasMaxLength(100);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}